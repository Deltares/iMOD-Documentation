[
  {
    "objectID": "further_links.html",
    "href": "further_links.html",
    "title": "Further Links",
    "section": "",
    "text": "This part points you to more information about iMOD."
  },
  {
    "objectID": "further_links.html#videos",
    "href": "further_links.html#videos",
    "title": "Further Links",
    "section": "Videos",
    "text": "Videos\nA list of videos which are iMOD Suite related are shown below. Note that due to privacy seetings, you might need follow the link below the video to view it on the Deltares Vimeo page.\n\niMOD User Day 2021 from Deltares on Vimeo."
  },
  {
    "objectID": "further_links.html#practical-tips",
    "href": "further_links.html#practical-tips",
    "title": "Further Links",
    "section": "Practical Tips",
    "text": "Practical Tips\nWe also maintain documentation with general practical and technical tips. It varies from fixing specific Powershell errors to a full explanation on how to do proper version control of both your data and scripts with Git and DVC.\niMOD Practical tips"
  },
  {
    "objectID": "further_links.html#source-code",
    "href": "further_links.html#source-code",
    "title": "Further Links",
    "section": "Source Code",
    "text": "Source Code\nBelow is the list of repositories that contain the source code of the individual components. You can raise issues, or suggest changes, here.\n\niMOD Documentation Github\niMOD QGIS plugin Github\niMOD 3D Viewer Github\niMOD Python Gitlab"
  },
  {
    "objectID": "viewer_install_msi.html",
    "href": "viewer_install_msi.html",
    "title": "Install iMOD Viewer with the Deltares setup",
    "section": "",
    "text": "To install the iMOD Viewer components (3D Viewer & QGIS plugin), download the installer via this link. If the subscription worked correctly, you will receive a download link via e-mail within only a few minutes.\n\n\n\n\n\n\nWarning\n\n\n\nThe QGIS plugin of course requires QGIS. You can download the standalone QGIS setup on the QGIS website We recommend downloading a QGIS version > 3.18 here. After downloading the QGIS setup, run it.\n\n\nUnzip the zipfile, which includes the viewer installer. Double click the .msi file.\nThis will open up the first screen of the setup wizard.\n\n\n\nThe starting screen.\n\n\nClick Next here, which will open up the next screen, which is the license screen.\n\n\n\nThe license screen\n\n\nTick the \"I accept\" tickbox, and click Next.\nThis will open up the installation selection screen.\n\n\n\nInstallation selection type.\n\n\nYou can select a Minimal or Complete installation here, by clicking the respective buttons.\nNote that the QGIS plugin, which comes only with a Complete install, is required to use all features of the iMOD viewer. These are:\n\nDrawing fence diagrams\nLoading only a sub section of the map (useful for large files)\nAccess to more legends.\n\nAfter selecting the preferred installation type, you still have to click Next before installation continues.\nThis will open the install screen.\n\n\n\nThe wizard install screen\n\n\nClick Install and after installation is complete, click Finalize. You should now be ready to go.\nThe installer will also create a program shortcut to the pdf with documentation. If you open the Windows Start window and type \"iMOD Suite User Manual\" it should pop up.\n\n\n\nA program shortcut should created by the installer to the User Manual."
  },
  {
    "objectID": "tutorial_Abbeyfeale.html",
    "href": "tutorial_Abbeyfeale.html",
    "title": "Abbeyfeale",
    "section": "",
    "text": "In this tutorial, you will learn the following:\n\nBasic usage of QGIS\nDraw a cross-section in the iMOD QGIS plugin\nView time series in the iMOD QGIS plugin\nRun a Python script in a shell"
  },
  {
    "objectID": "tutorial_Abbeyfeale.html#objective",
    "href": "tutorial_Abbeyfeale.html#objective",
    "title": "Abbeyfeale",
    "section": "Objective",
    "text": "Objective\nIn this Tutorial you learn the basics of iMOD-Suite. Therefore, we load and analyze a few file types. The files describe geohydrologic datasets for an area in the town of Abbeyfeale, Ireland. For this area we will develop a simple groundwater model using Python. Therefore, we start a command prompt for Python. From that command prompt you will run 7 prepared Python scripts. Each script handles a single step in the MODFLOW 6 modelling process: the preprocessing of basic data, the creation of MODFLOW 6 input files, running of the MODFLOW6 model and analyzing the results. The files created with each step are analyzed in QGIS."
  },
  {
    "objectID": "tutorial_Abbeyfeale.html#introduction-schematization-ground-water-model-abbeyfeale",
    "href": "tutorial_Abbeyfeale.html#introduction-schematization-ground-water-model-abbeyfeale",
    "title": "Abbeyfeale",
    "section": "Introduction: schematization ground water model Abbeyfeale",
    "text": "Introduction: schematization ground water model Abbeyfeale\nAbbeyfeale is a historic market town in the County Limerick, Ireland. The local authorities are worried about the effects of drier summers on groundwater levels. A simple groundwater model can provide them with a quantification of the expected groundwater level decline. Geology: much of Ireland can be considered as relatively glacial subsoil (typically < 15 m thick) overlying very hard old fractured rock. For basic models this can be represented as one layer for the subsoil and one layer for bedrock.\n\n\n\nFigure 1: Village of Abbeyfeale and the components of the simplified Abbeyfeale model"
  },
  {
    "objectID": "tutorial_Abbeyfeale.html#getting-started",
    "href": "tutorial_Abbeyfeale.html#getting-started",
    "title": "Abbeyfeale",
    "section": "Getting Started",
    "text": "Getting Started\n\nLaunch QGIS from your START menu, your desktop or click on …\\QGIS3.24.0\\bin\\qgis-bin.exe.\n\n\n\nIntermezzo QGIS language Perhaps your QGIS was installed in another language than English. Because the Tutorial refers to the English version, let’s change than to English.\n\nFrom the main menu click on Settings and select Options. (e.g. in Dutch Extra and Opties)\nIn the new window go to the General section on the left.\nFrom the drop-down menu “User interface translation” select American English and click on OK.\nClose QGIS and open it again to activate your language change.\n\n\n\nWe start with the creation of a new QGIS project.\n\nFrom the main menu click on Project and select New.\n\nThe data we use in this part of the training is from Ireland, so next we select the appropriate projection. (In case you missed the download instructions for the Tutorial data, visit the start page iMOD Suite Tutorial).\n\n\nFrom the main menu click on Project and select Properties.\nIn the Properties window select the category CRS, search for “EPSG:2157” and you find “IRENET95 / Irish Transverse Mercator”. Select this option and click the Apply button, followed by the OK button to close the window.\n\nFor navigation purposes, let us load the universal topography of Open Street Map. (OSM)\n\nCheck on the left site if the panel “Browser” is available. If not, select View from the main menu, go to Panels and select Browser Panel.\nThe Browser panel contains the group XYZ Tiles. From that group double click on the item OpenStreetMap. This layer is now added to the panel Layers. To display this dataset an internet connection is needed. So if that is the situation, you will see the world map in the display.\n\nLet us now open a series of basic files in QGIS. We start with a digital elevation map.\n\nGo to Layer in the main menu, select Add Layer and pick the option Add Raster Layer.\nIn the section Source click on the  button and select the file “…\\abbeyfeale\\data\\1-external\\topography\\Abbeyfeale DTM.tif”. GeoTIFF is a common file format.\nClick the Add button and the layer is added to the panel Layers.\nClick Close to leave the window.\nIn the panel Layers select the layer “Abbeyfeale DTM” and click the  button to zoom in to the layer.\n\nWe see the contours of a river, but the legend is gray only by default. Let’s change that.\n\nDouble click on the layer “Abbeyfeale DTM”. The window “Layer Properties” opens.\nSelect the group Symbology.\nFrom the dropdown menu Render Type select the type Singleband pseudocolor.\nBe sure a Color Ramp is selected as well.\nMake sure the dropdown menu Interpolation shows Linear and the dropdown menu Mode shows Continuous.\nClick Apply to change the colors and OK to close the window.\nYou can zoom in and out with the scroll button on your mouse or navigate with the buttons in the main menu: \n\nYour screen might look like Figure 2\n\n\n\nFigure 2: DTM in QGIS with the topography of OpenStreetMap Cross as background\n\n\nLet us save this project to be able to return to is later or in case of a crash of QGIS.\n\nGo to Project in the main menu, select Save As and select a folder and a file name for your project, e.g. “…\\abbeyfeale\\tutorial1.qgz”\n\nDo you like to see the values of the DTM under you mouse? You need a QGIS plugin “Value Tool”. Many additional helpful tools are available as QGIS plugin, just like the Deltares iMOD Plugin.\n\nGo to Plugins from the main menu and select Manage and Install Plugins…  and a window opens.\nOn the left, select the group All to see all available plugins.\nSearch for “iMOD” and see that the iMOD plugin is successfully installed.\nCheck if version 0.2.2 is installed. If not, click the button to Upgrade the iMOD Plugin.\nSearch for “Value Tool”, install it and Close the Plugins window.\n\n\n\n\n\n\nFigure 3: iMOD plugin toolbar\n\n\nThe tool is now visible as a panel on the left and as the Value Tool button () in a panel on the top of QGIS.\n\nHover over the DTM and in the “Value Tool” panel you see the value at your mouse location.\n\n\n\n\nFigure 4: Example panel Value Tool\n\n\nNext step is to load a polygon file representing the recharge zones in the project area.\n\nGo to Layer in the main menu, select Add Layer and pick the option Add Vector Layer.\nIn the section Source click on the  button and select the file “abbeyfeale\\data\\1-external\\recharge\\clipped_recharge.shp”. The ESRI Shapefile is a common file format.\nClick the Add button and the layer is added to the panel Layers.\nClick Close to leave the window.\n\nWe see the contours of zones with a single color. Let’s change that.\n\nDouble click on the layer “clipped_recharge”. The window “Layer Properties” opens.\nSelect the group Symbology.\nFrom the upper dropdown menu select Categorized.\nFrom the dropdown Value select RECH_MM_YR.\nFrom the dropdown Color ramp select Viridis.\nClick on the button Classify to create the legend.\nClick Apply to change the colors and OK to close the window.\n\nThere is also an ESRI Shapefile with the rivers in the project area. Feel free to download that file (“abbeyfeale\\data\\1-external\\rivers\\WATER_RivNetRoutes.shp”) in the same way.\nAfter loading raster and polygon layers, let us now load a point file with boreholes. This time, the file format (*.IPF) is not a common file standard but developed by Deltares because the file includes associated borelog information. We must load the IPF file with the iMOD plugin.\n\nOne of the QGIS toolbars is the iMOD Toolbar. There you find al the iMOD plugin tools. Click on the Open IPF button () and a window will open.\nClick on the  button and select the IPF “abbeyfeale\\data\\1-external\\boreholes\\BOREHOLES.IPF”.\nClick the Add button and the IPF file is added in the panel Layers.\n\nNOTE: If the points appear to be somewhere else on the map, e.g. Africa, make sure both your project and your layer have the correct CRS (EPSG:2157).\n\nCheck if the project CRS on the lower right corner still is . Otherwise double click this area and change the EPSG.\nCheck if the layer CSR is correct and therefor double click on the BOREHOLES layer.\nIn the window Layer Properties go to the section Source.\nIn the dropdown menu “Assigned Coordinate Reference System (CRS)” select EPSG:2157.\n\n\nRight-click layer BOREHOLES in the Layers panel and click “Show labels”. This will label the points with the borelog identifier.\n\nThe bore log for each borehole can only be displayed in a cross-section. Therefore, we activate the iMOD cross-section tool.\n\nOn the iMOD Toolbar select the Cross section button () to start the iMOD Cross Section tool. In the empty cross-section we can add a selection of (geological) layers. For now, we only select the boreholes.\nOn the iMOD Toolbar click on the button Select location and draw your cross-section line from north to south following the 6 central borehole locations. Add points to the line with your left mouse button and close the line with the right button. You can remove and redraw the line by clicking the Select location button again.\nIn the field Search buffer increase the buffer along the line to 1000m. Now a yellow shade is visible around your line selecting all the available points within.\nFrom the dropdown menu on the left of this toolbar, select the layer BOREHOLES if not selected already. From the borelog we want to plot the variable LITHOLOGY, which is already selected in the Variable dropdown menu (it is the only available variable).\nClick the button Add to add this layer to the cross-section manager below.\nClick the button Plot to draw this layer in the cross section.\n\nTo complete the cross section, let us also add the digital elevation map to the cross-section manager.\n\nFrom the dropdown menu now select the layer Abbeyfeale DTM. We do not nead to select a Variable\nClick the button Add to add this layer to the cross-section manager below.\nClick the button Plot to draw both layers in the cross section.\n\nYour screen might look like Figure 5 although the colors are different than in your screen. Feel free to use the column Symbology to change the legend.\nNOTE: If no lines appear on your screen, make sure you have set your project CRS to EPSG:2157 (see earlier step).\n\n\n\nFigure 5: Cross section with borelogs and DEM\n\n\nFor now, we leave QGIS and the iMOD Plugin to return later.\n\nSave your QGIS project (Ctrl+S) and keep the QGIS application open."
  },
  {
    "objectID": "tutorial_Abbeyfeale.html#imod-python",
    "href": "tutorial_Abbeyfeale.html#imod-python",
    "title": "Abbeyfeale",
    "section": "iMOD Python",
    "text": "iMOD Python\nThis is the moment where we start with Python. With the help of the iMOD Python package you will create a simple MODFLOW6 model and run it.\n\nAll input we use for this simple model is available in your tutorial folder “abbeyfeale\\data\\1-external\\..”. There you find the spatial data we loaded to QGIS, and there is a CSV file containing all single parameter values: “parameters.csv”.\nAll steps, from the preparation of the model input to visualization of the results, are available in separate Python scripts. You find the scripts for each phase in the folder and subfolders within “abbeyfeale\\src\\..”\n\n\nClick on the windows START button and type Deltaforge prompt. Click on the app and a black DOS window will start. [for Python experts: with this prompt a python environment is activated containing the iMOD python package as well as Snakemake (workflow manager)].\n\nFrom this DOS window we will run the different python scripts (*.py files). For the scripts to work properly, we need to navigate to the correct folder location.\n\nIn the DOS window type the letter of the drive you work on (e.g. C: or D:) and press ENTER.\nNavigate to the correct main tutorial folder with CD (change directory). E.g. “CD c:\\imod\\training\\tutorial\\abbeyfeale” and press ENTER.\n\nTIP: After copying your path, you can paste your path in the prompt window with CTRL+V.\nNow we run 4 scripts to convert basic data into an interim model format (NetCDF), ready to create MODFLOW6 input files. \n\nScript 1 – template\n\nThis script opens the DTM file, uses its extent for the model boundary and sets the cell size to 40m.\n\nIn the Deltaforge prompt type the command: Python src\\1-prepare\\1-create-template-grid.py and press ENTER.\n\n\nResults 1: The result is a raster file (NetCDF format) describing the mask of our model (extent and cell size) as well as our DTM scaled up to the size of the model mask.\n\nOptional step. Load the topography_raster.nc file into QGIS. The file is in the folder “Abbeyfeale\\data\\2-interim”.\n\n\nScript 2 – River\n\nThis script opens a shape file with river elements. It rasterizes it project cell size and adds a default river depth (1 m) and bottom resistance.\n\nIn the Deltaforge prompt type the command: Python src\\1-prepare\\2-create-river-system.py and press ENTER.\n\nResults 2: The result is a raster file (NetCDF format) for the river data, containing data for the parameters Stage, Bottom and Conductance.\n\nLoad the file “Abbeyfeale\\data\\2-interim\\river_raster.nc” into QGIS via the menu Layer > Add Layer > Add Raster Layer. From the interim window you see that the NC files contains 3 river parameters.\nClick on the button Add Layers and click Close to close the Data Source Manager.\n\n\nScript 3 – Recharge\n\nThis script opens the shape file with recharge zones (polygons) containing the recharge in mm per year. The recharge zones are rasterized to the project extent and cell size and the scripts adds a seasonal forcing resulting in a time series of daily recharge values for 1 year.\n\nIn the Deltaforge prompt type the command: Python src\\1-prepare\\3-create-recharge.py and press ENTER.\n\nResults 3: The result is a mesh file (NetCDF format) for the recharge data, containing data for 365 days. This NC file must be loaded as mesh in stead of a raster.\n\nFrom the menu Layer > Add layer > Add mesh load the file “Abbeyfeale\\data\\2-interim\\recharge_mesh.nc” into QGIS. From the panel Layer you can see that the file is a timeseries because a small clock symbol is visable .\n\nThere are 2 ways to visualize this recharge over time: a) animation over time and b) timeseries at location.\n\nFor the animation over time, activate the Temporal Control Panel with the button  on the Map Navigation Toolbar.\nFor timeseries at location activate the Timeseries panel with the Timeseries button ( ) on the iMOD Toolbar.\n\nYour display should look similar with Figure 6, except for the red line below.\n\nIn the Temporal Controller panel click the green play button (). Navigation buttons appear.\nIncrease the Step from 1 to 14 days and start the animation with a click on the Play button ().\nIn the iMOD time series panel be sure the layer RECHARGE_MESH is loaded. The mesh only contains a single variable: Recharge.\nClick the button Select Points, your mouse changes into a . be sure Update on Selection is checked and hover over the mesh. The graph shows the timeseries at the location of your mouse.\nDeselect the checkbox Update on Selection.\nClick the button Select Points (your mouse becomes a  and with the left mouse button select 3 points ad random.\nFinally click the Plot button and the 3 timeseries are added to the chart. Colors can be changed.\n\n\n\n\nFigure 6: Recharge data analysed in the Temporal Controller (QGIS) and the Time Series Plot tool (iMOD)\n\n\n\nScript 4 – Geohydrology\n\nThis script reads default parameter values from the file “parameters.csv” in order to create a NetCDF file with top and bottom of 3 layers including the geohydraulic parameters. The default values are: \n\nParemeter values\n\n\nParemeter\nValue\nQuantity\nDescription\n\n\n\n\nK_tz\n5.9\nm/d\nPermeability Transition Zone\n\n\nK_sb\n0.02\nm/d\nPermeability Shallow Bed rock\n\n\nK_db\n0.014\nm/d\nPermeability Deep Bed rock\n\n\nD_tz\n1\nm\nThickness transition zone\n\n\nD_sb\n5\nm\nThickness shallow bed rock zone\n\n\nD_db\n50\nm\nThickness deep bed rock zone\n\n\n\n\nIn the Deltaforge prompt type the command: Python src\\1-prepare\\4-create-hydrogeology.py and press ENTER.\n\nResults 4: The result is a mesh file (NetCDF format) for the geohydrological data. This NC file must be loaded as mesh instead of a raster.\n\nFrom the menu Layer > Add layer > Add mesh load the file “Abbeyfeale\\data\\2-interim\\hydrogeology_mesh.nc” into QGIS.\nDouble click on the layer name “hydrogeology_mesh” and the window Layer Properties will open.\nClick on the group Source on the left and on the right, you see all Available Datasets in this single mesh.\n\nLet’s create a cross-section with the permeability plot within each layer.\n\nFirst, we must deactivate temporal control. Open the Temporal Control Panel again (), and turn off temporal navigation with the button .\nOn the iMOD Toolbar select the  button to start the iMOD Cross Section tool.\nIn the iMOD cross-section panel be sure the layer “hydrogeology_mesh” is selected. From the Variable dropdown select permeability and from the Layers dropdown select all layers.\nClick the button Add to add this item to the list of chart elements.\nClick on the button Select Location and draw a single line over the model area with your left mouse button. Close the line with your right mouse button.\nClick the button Plot and the geology along the line colored by permeability is draw in the chart.\n\nTIP: If you do not see any line, perhaps the axes are not defined well. To view all data, click you right mouse button in the figure and select the option “View All”. The alternative is to click on the small A symbol () in the lower left of the chart.\n\nUse the scroll button on your mouse to zoom in and make the permeability of the 1st layer visible.\n\n\n\n\nFigure 7: Three model layers coloured by permeability in the iMOD cross-section tool\n\n\n\nScript 5 – Create MODFLOW 6 input\n\nNow the input data for the model are available it is time to convert the data into the standard MODFLOW6 format. For that conversion a function exists within iMOD Python. We prepared another python script for you to easily do the conversion by running the script in the Deltaforge prompt.\n[If you are interested in the content of the script, open it in your Python editor (e.g. Spyder) or a simple Text editor].\n\nIn the Deltaforge prompt type the command: Python src\\2-build\\5-build-model.py and press ENTER.\n\nThe result of the script is a folder with the standard MODFLOW 6 input.\n\nOptional step Visit the folder “abbeyfeale\\data\\3-input” with your file manager. There your find the file MFSIM.NAM. This is the main MODFLOW6 file with references to the other files and settings. The folder GWF_1 contains the model input and later the model results.\n\n\nScript 6 – Run the MODFLOW 6 model\n\niMOD Suite uses the official USGS version of MODFLOW 6. The executable is provided with the tutorial database and is available as “abbeyfeale\\bin\\mf6.exe”.\n\nIn the Deltaforge prompt type the command: Python src\\3-model\\6-run-model.py and press ENTER.\n\nYou can check the logfile of the model in order to see if it was run successful.\nOpen the file “data\\3-input\\mf.sim.lst” in the Text Editor you prefer. Go to the end of the file and see the total run time of the model and a confirmation of a “normal termination of the simulation”.\nOpen the file “data\\3-input\\gwf_1\\gwf_1.lst”. At the end of the file you see the Volume Budgets, the water balance for the last stress period.\n\n\nScript 7 - Convert the MODFLOW 6 results for QGIS\n\nThe standard output of MODFLOW6 cannot be loaded into QGIS. Therefore, iMOD Python contains a function to convert the output into NetCDF files.\n\nIn the Deltaforge prompt type the command: Python src\\3-model\\7-post-process-output.py and press ENTER.\n\nThe result of this script is a NetCDF file with the calculated head for 365 days.\n\nLoad the file “Abbeyfeale\\data\\4-output\\hds_mesh.nc” into QGIS.\n\nBy default, the variable bottom_layer_1 is loaded. We will change the selected variable into Heads and pick a legend specific for plotting of time series.\n\nDouble click on the layer “hds_mesh” to open the Layer Properties window.\nSelect the group Source on the left and see that the mesh contains several datasets.\nSelect the group Symbology on the left and select the first tab Dataset (). Here we can select the group we want to plot, for now it is “head_layer_1”.\n\nClick on the icon () on the line for “head_layer_1” and change it into (). Click on Apply.\nSelect the second tab Contours ( ).\nSet the Min value on 40.00 and the Max value on 60.00 in order to see head changes over time.\nFrom the dropdown menu Color Ramp select Turbo and click on OK to close the window.\n\nNow we try to show an animation of the variation of calculated Heads over time and as timeseries.\n\nFor the animation over time, activate the Temporal Control Panel with the button () on the Map Navigation Toolbar.\nFrom you experience with this tool, try to start the animation with timestep of 14 days.\nFor timeseries at location activate the Timeseries panel with the Timeseries button () on the iMOD Toolbar.\nFrom you experience with this tool, select 3 points in the model area and plot the corresponding calculated Heads for layer 1.\n\n\n\n\nFigure 8: Calculated head with MODFLOW 6 on 3 points within the model area\n\n\nThe QGIS part of the tutorial ends here. You can save your QGIS project now."
  },
  {
    "objectID": "python_getting_started.html",
    "href": "python_getting_started.html",
    "title": "Getting started",
    "section": "",
    "text": "import imod\n\n# read and write IPF files to pandas DataFrame\ndf = imod.ipf.read('wells.ipf')\nimod.ipf.save('wells-out.ipf', df)\n\n# get all calculated heads in a xarray DataArray\n# with dimensions time, layer, y, x\nda = imod.idf.open('path/to/results/head_*.idf')\n\n# create a groundwater model\n# abridged example, see examples for the full code\ngwf_model = imod.mf6.GroundwaterFlowModel()\ngwf_model[\"dis\"] = imod.mf6.StructuredDiscretization(\n    top=200.0, bottom=bottom, idomain=idomain\n)\ngwf_model[\"chd\"] = imod.mf6.ConstantHead(\n    head, print_input=True, print_flows=True, save_flows=True\n)\nsimulation = imod.mf6.Modflow6Simulation(\"ex01-twri\")\nsimulation[\"GWF_1\"] = gwf_model\nsimulation.time_discretization(times=[\"2000-01-01\", \"2000-01-02\"])\nsimulation.write(modeldir)"
  },
  {
    "objectID": "python_install.html",
    "href": "python_install.html",
    "title": "Install",
    "section": "",
    "text": "The recommended way of installing iMOD Python is by running the Deltaforge installer. Read the Deltaforge installation instructions here.\nFor other ways to install iMOD Python, see its documentation.\niMOD Python has no point release schedule, but instead has a \"rolling release\", where the package is frequently updated. For the quickest access to the latest changes, do a development install."
  },
  {
    "objectID": "tutorial_index.html",
    "href": "tutorial_index.html",
    "title": "Tutorials",
    "section": "",
    "text": "The iMOD-suite consists of several components, and combining these in different ways allows for different workflows. This “mix-and-match” capability benefits user flexibility, but it can be a bit daunting at start.\nTherefore, we have compiled a set of tutorials to help you get started and give you an overview of the Suite’s capabilities.\nTo download and install the iMOD Suite, follow the instructions here. To download the tutorial material, you can follow this link.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAbbeyfeale\n\n\nComponents: QGIS and iMOD plugin\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nConceptual fresh-salt model\n\n\nComponents: iMOD Python, iMOD WQ, QGIS plugin, 3D Viewer\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDommel\n\n\nComponents: iMOD 3D Viewer\n\n\n\n\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "viewer_known_issues.html",
    "href": "viewer_known_issues.html",
    "title": "Known Issues",
    "section": "",
    "text": "Known issues with the iMOD Viewer are listed over here."
  },
  {
    "objectID": "viewer_known_issues.html#qgis-plugin",
    "href": "viewer_known_issues.html#qgis-plugin",
    "title": "Known Issues",
    "section": "QGIS plugin",
    "text": "QGIS plugin\n\nPlot axis off\nIn the QGIS plugin, a weird offset in the plot axis can occur when you use a multiple monitor setup. Both the Time series widget as well as the Cross-section widget can suffer from this.\n\n\n\nNotice the y-axis being moved too high and the x-axis being scaled weirdly.\n\n\nSo far we haven't been able to fix it in the code, so you can fix this as a user by either:\n\nMoving your QGIS application to the main window of your monitor setup\nIn Windows, navigate to Settings > Display then under Rearrange your displays select the monitor you want to view QGIS on, and finally tick the box Make this my main display\n\n\n\nIPF reader does not support all IPF files\nCurrently the IPF reader is not able to read every IPF file, as iMOD 5 supports quite a wide range of IPF files. For example, iMOD 5 supports both whitespace and comma seperated files, whereas the QGIS plugin only supports comma seperated IPF files. If the plugin is unable to read your IPF file, it is best to read the file with iMOD Python and consequently write it again. This can help, because the IPF reader in iMOD Python is a lot more flexible, but its writer always writes to a specific format. We plan to improve the flexibility of the plugin's IPF reader."
  },
  {
    "objectID": "viewer_known_issues.html#d-viewer",
    "href": "viewer_known_issues.html#d-viewer",
    "title": "Known Issues",
    "section": "3D Viewer",
    "text": "3D Viewer\n\nSupported Windows versions\nAt present, only Windows 10 is supported. Windows 8.1 and Windows 11 currently are not supported, and it has been confirmed that the 3D viewer does not function properly with these Windows versions.\n\n\nMSVCR100.dll missing\nYou might get an error at startup of the 3D viewer, such as: \"The code execution cannot proceed because MSVCR100.dll was not found. Reinstalling the progam may fix the problem\"\nThis usually happens on a clean machine, which has not yet installed the Microsoft Visual C++ 2010 redistributable. You can download it here\nMake sure to check if you have a 32-bit or 64-bit Windows version on your system and consequently installing the right version of the redistributable. You can find this out pressing the Windows key (or clicking Start) and typing System Information. Click it, and look under \"System Type\". If it says x64-based PC, you have a 64-bit system."
  },
  {
    "objectID": "python_index.html",
    "href": "python_index.html",
    "title": "iMOD Python",
    "section": "",
    "text": "The iMOD Python package is designed to help you in your MODFLOW groundwater modeling efforts. It makes it easy to go from your raw data to a fully defined MODFLOW model, with the aim to make this process reproducable. Whether you want to build a simple 2D conceptual model, or a complex 3D regional model with millions of cells, iMOD Python scales automatically by making use of dask.\nBy building on top of popular Python packages like xarray, pandas, rasterio and geopandas, a lot of functionality comes for free.\nCurrently we support the creation of the following MODFLOW-based models:\n\nUSGS MODFLOW 6, currently only the Groundwater Flow packages\niMODFLOW\niMOD-WQ, which integrates SEAWAT (density-dependent groundwater flow) and MT3DMS (multi-species reactive transport calculations)\n\nDocumentation: https://deltares.gitlab.io/imod/imod-python This documentation includes a section \"How do I\" which can be used for common data conversions in imod-python or xarray. This section will be regular updated based on the different questions of users.\nSource code: https://gitlab.com/deltares/imod/imod-python"
  },
  {
    "objectID": "tutorial_Dommel.html",
    "href": "tutorial_Dommel.html",
    "title": "Dommel",
    "section": "",
    "text": "In this tutorial, you will learn the following:\n\nBasic usage of the iMOD 3D Viewer\nView a shapefile in the 3D viewer\nView a grid with timeseries in the 3D viewer"
  },
  {
    "objectID": "tutorial_Dommel.html#objective",
    "href": "tutorial_Dommel.html#objective",
    "title": "Dommel",
    "section": "Objective",
    "text": "Objective\nIn this tutoral we will explore the iMOD 3D Viewer, based on data of the Dommel, a catchment in south of the Netherlands. This viewer is developed because QGIS does not support 3D viewing. It can display your geological data (layers and borehole data) but also data variation through time like chloride concentrations.\nThere are 2 options to start the 3D Viewer. One option is to select layers in QGIS and select the 3D Viewer icon on the iMOD toolbar . The selected layers are opened in the 3D Viewer. The other option is to start the 3D Viewer directly. In this short Tutorial we’ll pursue the second option."
  },
  {
    "objectID": "tutorial_Dommel.html#tutorial",
    "href": "tutorial_Dommel.html#tutorial",
    "title": "Dommel",
    "section": "Tutorial",
    "text": "Tutorial\n\nLaunch the iMOD 3D Viewer from your START menu or your desktop. Search for “imod6.exe”.\nMaximize the program window for a better view.\n\nWe display some data from Brabant, a province in The Netherlands. (In case you missed the download instructions for the Tutorial data, visit the start page iMOD Suite Tutorial).\nLet’s first import an overlay file showing the surface water elements.\n\nIn the main menu choose “Data”, select “Open overlay” and open the shape file “…\\data\\1-external\\Brabant-data\\riv_brabant.shp”.\nSelect the new layer in the overview and click the “draw-selected-layer” button ().\n\nNow we’ll open a dataset containing Heads calculated with a MODFLOW model. This NetCDF file contains for each model layer the top, the bottom and a timeseries of calculated heads.\n\nIn the main menu choose “Data”, select “Open grid file” and open the shape file “..\\data\\1-external\\Brabant-data\\Calculated-Heads.nc”.\nSelect both layers in the overview and click the “draw-selected-layer” button ().\nClick on the “>” sign left from the layer “Calculated-Heads“ and you’ll see a subset with “All Layer” and “Layered Datasets”.\nClick on the “>” sign left from both the section “All Layer” and “Layered Datasets”.\n\nYour screen might look like Figure 1\n\n\n\nFigure 1: Top view of dataset “Calculated-Heads” and river overlay in the 3D viewer\n\n\nLet’s now experience with the viewer controls.\n\nSpin the mouse wheel forward to zoom in and spin backwards to zoom out. On a laptop, move two fingers up and down on the touchpad.\nIn case you lost control on your display view, click in the toolbar Viewer Controls on the “zoom-to-extent” button () to return to the initial view.\nCombine the Shift button + right mouse and move the camera horizontally/vertically with each mouse move (or finger on your touch pad).\nCombine the Ctrl button + right mouse and rotate the camera around its lens with a mouse move (or finger on your touch pad).\nGo back to the initial view with the “zoom-to-extent” button ().\nHold the right mouse button while moving the mouse and the camera moves around the grid.\n\nThe imported data is a nice example of an unstructured grid.\n\nZoom in to the upper left part of the grid. Notice that the grid is built from triangles, concentrated around the rivers.\nSwitch the dataset on and off with a click on the () button in file overview, left of the layer. See the underlaying rivers.\n\nIn your display the vertical thickness of the dataset is perhaps rather small. Let’s increase the vertical exaggeration.\n\nIn the upper right corner, switch off the “automatic exaggeration of the z-axis”.\nNow increase the value to 50.0 and the view will change automatically.\n\nSome final experience with the other viewer controls.\n\nUse the buttons () to reposition your camera to another fixed position to the grid.\nClick the button “Toggle Sliders”() to activate the sliders for the X, Y and Z direction.\nExperiment with the sliders, both left and right \n\nThe colors in the display by default referred to the Elevation of the layers. Let’s now color the layers by calculated Head.\n\nIn the list of imported files select “Calculated-Heads”.\nFrom the subset “layered Datasets” double click on the element “data”.\n\nWait a few seconds and the name turns bold and the colors in the display change.\n\nSelect the name “data” and click your right mouse button to open a pop-up window.\nSelect “Edit legend” to open the “Legend editor” (see figure on the right).\n\nSelect PIYG for Color scale.\nCheck the Percentiles box.\nClick on OK and the window will close. The colors in your display change automatically.\n\nThe imported file doesn’t contain one single head, but a timeseries of calculated heads ranging from 01/01/2018 – 01/02/2018. Now let’s use the Time Slider to display the data through time. \n\nFirst click the button “Back(+y)” for a nice 3D view.\nClick the button () to start the animation. It is a large dataset to the view in the display only changes slowly.\nStop the animation with the button ().\nPlay around with the slider.\n\nThat’s all for now. You can save your session if you like.\n\nFrom the main menu choose “File” and select “Save As…” to save the session as an *.imod file.\nClose the 3D viewer via menu “File” and select Quit”.\n\nThank you for your patience and attention.\n\n\n\nFigure 2: iMOD 3D Viewer - Legend Editor"
  },
  {
    "objectID": "qgis_user_manual.html",
    "href": "qgis_user_manual.html",
    "title": "QGIS Plugin User Manual",
    "section": "",
    "text": "This part contains the user guide of the QGIS plugin."
  },
  {
    "objectID": "qgis_user_manual.html#configuration",
    "href": "qgis_user_manual.html#configuration",
    "title": "QGIS Plugin User Manual",
    "section": "Configuration",
    "text": "Configuration\n\nYou probably want to change the language settings in QGIS, if it defaults to Dutch, it’s Extra > Opties > Algemeen. Change it to to US settings (that’s generally the safest default). You will need to restart QGIS before this has effect.\n\n\n\n\n\nThe QGIS language settings\n\n\n\n\nStart up QGIS, go to Plugins > Manage and Install plugins > Installed. Make sure the iMOD plugin is ticked.\n\n\n\nThe QGIS plugin manager. Here you can install and activate plugins.\n\n\n\nIf the installation and configuration was succesful, the plugin should be visible in your toolbar.\n\n\n\n\nThe iMOD plugin toolbar"
  },
  {
    "objectID": "qgis_user_manual.html#functionality",
    "href": "qgis_user_manual.html#functionality",
    "title": "QGIS Plugin User Manual",
    "section": "Functionality",
    "text": "Functionality\nThe QGIS plugin currently consists of five widgets, of which the functionality will be described in the next section:\n\nOpen IPF\n3D Viewer\nTime Series\nCross section\nAdd NHI data\n\n\n Open IPF\nOpen IPF file and lets QGIS interpret it as a regular shapefile with points. Required to interpret timeseries in the Time Series widget, as well as to visualize borelogs in Cross section and 3D Viewer widget. To an IPF timeseries file it attaches two columns to the attribute table of the vector layer, namely a \"start time\" and \"end time\". This allows using the QGIS Temporal Controller Panel to browse through time, and see which points have data defined within a certain time frame.\n\nPress the \"...\" button to select a path to a file (as you would in other QGIS windows).\nPress \"Add\" to load the file into the QGIS explorer.\n\n\n\n\n\n\n\nWarning\n\n\n\nCurrently the IPF reader is not able to read every IPF file, as iMOD 5 supports quite a wide range of IPF files. For example, iMOD 5 supports both whitespace and comma seperated files, whereas the QGIS plugin only supports comma seperated IPF files. If the plugin is unable to read your IPF file, it is best to read the file with iMOD Python and consequently write it again. This can help, because the IPF reader in iMOD Python is a lot more flexible, but its writer always writes to a specific format. We plan to improve the flexibility of the plugin's IPF reader.\n\n\n\n\n\nThe Open IPF widget.\n\n\n\n\n\nThe temporal controller panel and map canvas of QGIS. The temporal controller panel is opened by clicking the clock in the \"map navigation\" toolbar.\n\n\n\n\n 3D Viewer\nThe 3D viewer widget creates a connection between QGIS and the iMOD 3D viewer. It allows you to make selections in QGIS and forward them to the 3D viewer. Note that there are two perquisites for the iMOD viewer to correctly render mesh data:\n\nThe mesh data needs to be stored in a UGRID file\nVertical axis is stored as variables top_layer_* and bottom_layer_*. The data belonging to each layer follows the following format head_layer_*, e.g. for a variable head.\n\nThis means that not all data that can be loaded in QGIS as mesh can be viewed in the 3D viewer. Currently only UGRID meshes and IPF borelog files are supported.\n\nUse the selection box at the top to select the mesh layer/ipf file you want to inspect in the 3D viewer.\nThe \"Extent\" group allows the user to manually set the bounding box by editing the numbers under \"North\", \"East\", \"South\", and \"West\", and more:\n\nThe \"Current Layer Extent\" button sets the bounding box to the extent of the layer selected in the QGIS explorer.\nThe \"Calculate from Layer\" box allows you to select a dataset loaded in the QGIS explorer to calculate the extent from.\n\"Map canvas extent\" sets the bounding box to the map canvas\n\nThe \"Select\" group contains a set of buttons to spatially select data to be forwarded to the 3D viewer\n\nThe \"Draw fence diagram\" button allows to draw lines on the map canvas which can be forwared to the 3D viewer to draw a fence diagram. Press the button to start drawing mode. Left-click to start drawing a line; right-click to stop drawing the line.\nThe \"Clear fence diagram\" button clears all lines from the map canvas\nThe \"Draw extent\" buttons allows you to click and drag a box that allows you to set a bounding box. The iMOD viewer will only load the data within this boundary box, which can be useful when exploring specific areas in large datasets. Drawing an bounding box will update the \"Extent\" widget. Right-click to stop drawing the extent.\n\nThe \"View\" group contains a set of buttons to interact with the 3D viewer\n\n\"Start iMOD viewer\" starts the iMOD viewer and immediately loads the data selected in the widget.\n\"Load mesh data\" remove previous data from viewer and load new mesh data in it.\n\"Load fence diagram\" loads the lines drawn with \"Draw fence diagram\" to the viewer and renders a fence diagram.\n\"Load legend\" transfers legend in the QGIS map layer to fence diagram and/or mesh data in the 3D viewer for the selected variable in the QGIS map canvas.\n\n\n\n\n\nThe 3D viewer widget. It will be opened on the right-hand side of the screen.\n\n\n\n\n\n\n\n\nNote\n\n\n\nThe 3D Viewer widget does not forward any data to the iMOD 3D viewer, it only forwards the path to the data to load, and a command how to load it. As of now, the widget does not understand changes made by the user in the 3D viewer. It only supports \"one-way traffic\" towards the viewer.\n\n\n\n\n Time Series\nThe Time Series widget visualizes time series stored in IPF files or mesh data in a graph window. You can freely zoom and drag the graph in this window. Sometimes you lose your view of the lines by dragging too fast; so to reset your view, you can click on the small \"A\" in the bottom left corner of the graph window. The buttons in the widget change, depending on which data type is being selected.\n\nUse the box on the top left of the widget to select the ipf file or mesh data to plot.\n\"ID column\" box allows you to select the column of the attribute table that sets the point ID's to be plotted in the legend.\nThe \"Variable\" box sets the variable (or variables in case of IPFs) to be plotted.\nThe \"Layer\" box sets the layers of a mesh to be plotted. Multiple layers can be selected.\nThe \"Select points\" box allows selecting points in a dataset to plot.\n\n\nWhen selecting on a IPF, left-click and drag a box to select points. SHIFT + click to add points to the existing selection. Press CTRL + ALT + A to deselect all points. You can also click Deselect features from all layers in QGIS' selection toolbar. To stop selecting, click Pan Map in QGIS' Map Navigation toolbar, or close the Timeseries widget.\nWhen selecting on a mesh, left-click to select a point on a mesh to plot, right-click to stop selecting.\n\n\nThe \"update on selection checkbox\": when checked on, the widget automatically plots newly selected points for point data or plots data at the location of the cursor for mesh data.\nThe \"Line Color\" box allows you to set a color of a selected line. You can select a plotted line by clicking on it.\nThe \"Draw markers\" check box enables the drawing of markers on each data point. Recommended when there are not many datapoints to show and/or when the intervals between data points are not constant.\nThe \"Colors\" button opens up a new window that lets you select different colorramps.\nThe \"Export\" button allows you to export your plot to an image file (.png, .jpg etc.), a vector file (.svg for Inkscape), or a .csv to allow for plotting in different software.\n\n\n\n\nThe Time series widget and map canvas for points. Notice that the widget can handle irregular time series filled with gaps. The yellow points on the map canvas indicate the selected points.\n\n\n\n\n\nThe Time series widget and map canvas for a mesh. The red crosses indicate the location of the plotted time-series.\n\n\n\n\n\n\n\n\nNote\n\n\n\nA known issue with a multiple monitor setup is that the grid behind the plot might be plotted way off. See the known issues section for more info and how to fix this.\n\n\n\n\n Cross-section\nThe cross-section widget allows you to draw cross-sections of both mesh and raster data. Note that the widget expects that the vertical axis is stored as variables top_layer_* and bottom_layer_*. The data belonging to each layer follows the following format head_layer_*, e.g. for a variable head. For time dependent data, when the Temporal Controller Panel is turned on, the cross-section plot is automatically updated when a different moment in time is selected.\nThe cross-section widget consists of three component:\n\nThe top bar\nA styling table, specifying the styling and order of elements to plot.\nA graph window, in which the cross-section is plotted.\n\nThe functionality of each component is explained below.\n\n\nThe top bar\n\n\n\"Select location\" lets you draw a line on the map, along which a cross-section will be drawn. Left-click to start and to stop drawing a line. Right-click to stop the selection.\nWhen the \"Dynamic resolution\" checkbox option is switched on, the amount of points along which data is sampled for the plot is set to a fixed number and resolution varies. Turning this off and setting a very small resolution size might improve precision, but will definitely result in a performance loss.\nThe \"Search buffer\" box sets the tangential distance from which boreholes will will be selected.\nThe \"Plot\" button plots the data and styling selected in the styling table to the graph window.\nThe \"Export\" button allows you to export your plot to an image file (.png, .jpg etc.), a vector file (.svg for Inkscape), or a .csv to allow for plotting in different software.\n\n\n\n\nThe styling table\n\n\nThe top left selection box allows you to choose the dataset to plot.\nThe \"Variable\" box, you can select the variable to plot.\nThe \"Layer\" box lets you select individual layers to plot. By default all are plotted.\nThe \"As line(s)\" checkbox turns on an option to plot data as lines. Useful to plot layer tops or bottoms to show interfaces.\nThe \"Add\" button adds a dataset to the table.\n\n\n\n\nThe plot window\n\n\nRight-click the plotting window to set zoom options.\nYou can click the small \"A\" in the bottom left corner to reset zoom.\n\n\n\n\n\n\n\nThe \"Cross-section\" widget and map canvas. An example is shown in which layer ids are plotted as colors, and borelogs are plotted as bars.\n\n\n\n\n\n\n\n\nNote\n\n\n\nA known issue with a multiple monitor setup is that the grid behind the plot might be plotted way off. See the known issues section for more info and how to fix this.\n\n\n\n\n Add NHI-data\nOpens up a window to select data from the NHI portal to load directly in QGIS. The NHI is the Netherlands Hydrological Instrument . The NHI data provides datasets with different kinds of services:\n\na \"Web Map Service\" (WMS), which provides a map with a (fixed) legend.\na \"Web Feature Service\" (WFS), which provides features from vector data via the internet.\na \"Web Coverage Service\" (WCS), which provides raster data via the internet.\n\nYou can use the search bar to search for datasets of your liking.\n\n\n\nThe \"Add NHI window\"\n\n\n\n\n\n\n\n\nNote\n\n\n\nExperience has shown that sometimes these services are hard to reach and data cannot be loaded."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "iMOD Suite Documentation",
    "section": "",
    "text": "The iMOD Suite offers different modules which support modelling with MODFLOW 6 (including unstructured meshes):\n\niMOD Viewer: The iMOD Viewer consist of a standalone 3D viewer and a QGIS plugin. The iMOD QGIS Plugin QGIS plugin allows visualisation of model input and output with tools for cross-sections, timeseries and link to the 3D viewer. It supports structured NetCDF, UGRID and IPF files. And the iMOD 3D Viewer for interactive 3D visualisation of unstructured input and output. Supports UGRID file format and IPF borelog files.\niMOD Python: A Python package to support MODFLOW groundwater modeling. It makes it easy to go from your raw data to a fully defined MODFLOW model, with the aim to make this workflow reproducable.\niMOD Coupler: Software that couples MODFLOW 6 to other computational cores. It currently supports a coupling to MetaSWAP, but additional computational cores are planned in the future.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIntroduction\n\n\nLearn what’s included.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTutorials\n\n\nLearn how to use the iMOD Suite\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\niMOD Coupler\n\n\nCouple Modflow 6 to other model codes.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\niMOD Python\n\n\nBuild large groundwater models with scripts\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\niMOD Viewer\n\n\nVisualization of unstructured grids in GIS and 3D.\n\n\n\n\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "introduction.html",
    "href": "introduction.html",
    "title": "Introduction",
    "section": "",
    "text": "The iMOD Suite provides tools to efficiently build and visualize groundwater models.\nDeltares is working to integrate and improve our groundwater software. Therefore iMOD is extended with a new iMOD Suite to link to the latest developments on the MODFLOW and on the changing requirements in the field of groundwatermodelling, most pressing currently the support of unstructured grids.\nWe created the new iMOD Suite to aid pre- and post-processing unstructured groundwater models. Furthermore, a second goal of this suite was to better connect to the latest developments in the data science ecosystem, by utilizing:\n\nExisting data format conventions (NetCDF, UGRID) instead of developing new ones, allowing more user flexibility to find the right tools for the right job.\nWidely used and tested software (QGIS) to which we add our extension, instead of creating complete programs ourselves.\nModern programming languages (C++ and Python) that allow connecting to a big and lively software ecoystem.\n\nThe iMOD Suite offers different modules which support modelling with MODFLOW 6 (including unstructured meshes):\n\niMOD Viewer: The iMOD Viewer consist of a standalone 3D viewer and a QGIS plugin. The iMOD QGIS Plugin allows visualisation of model input and output with tools for cross-sections, timeseries and link to the 3D viewer. It supports structured NetCDF, UGRID and IPF files. And the iMOD 3D Viewer for interactive 3D visualisation of unstructured input and output. Supports UGRID file format and IPF borelog files.\niMOD Python: A Python package to support MODFLOW groundwater modeling. It makes it easy to go from your raw data to a fully defined MODFLOW model, with the aim to make this workflow reproducable.\niMOD Coupler: Software that couples MODFLOW 6 to other computational cores. It currently supports a coupling to MetaSWAP, but additional computational cores are planned in the future.\n\n\n\n\nEasy plotting of 4 dimensional [t, z, y, x] data in the iMOD QGIS plugin. The example shows the chlorine concentrations computed by the NHI fresh-salt model.\n\n\n\n\n\nThe chlorine concentrations computed by the NHI-fresh-salt model for the province of Zeeland, plotted in the new iMOD 3D viewer. The top layer is made partly transparent, creating the pretty mist effect in the creek ridges."
  },
  {
    "objectID": "introduction.html#comparison-with-imod-5",
    "href": "introduction.html#comparison-with-imod-5",
    "title": "Introduction",
    "section": "Comparison with iMOD 5",
    "text": "Comparison with iMOD 5\nThe proven technology and expertise of iMOD is consolidated within iMOD 5. iMOD 5 supports structured calculations with MODFLOW2005 and structured MODFLOW 6 and can be coupled to the unsaturated zone model MetaSWAP. The model input and output can be visualised in its fast interactive viewer. The documentation of iMOD 5 can be found here .\nImportant technological innovations will be developed in the new iMOD Suite, whereas iMOD 5 will be maintained the coming years, but will see no big new feature developments. Table 1 and Table 2 respectively provide comparisons between iMOD Suite and iMOD 5 for the components and supported MODFLOW6 packages.\n\n\nTable 1: Comparison between iMOD Suite & iMOD 5\n\n\n\n\n\n\n\n\niMOD Suite\niMOD 5\n\n\n\n\ncomputational kernels\nMODFLOW 2005, MODFLOW 6, SEAWAT, MT3DMS\nMODFLOW 2005, MODFLOW 6, SEAWAT, MT3DMS, MetaSWAP\n\n\nfile types\nNetCDF, UGRID, shp, tiff, idf, ipf, gen\nidf, ipf, isg, gen\n\n\ngrid types\nstructured & unstructured\nstructured & nested structured\n\n\nscripted pre-processing\niMOD Python\niMOD Batch\n\n\ninteractive pre-processing\n(QGIS)\niMOD GUI\n\n\nscripted 2D plot\niMOD Python\niMOD Batch\n\n\ninteractive 2D plot\niMOD QGIS plugin (& QGIS)\niMOD GUI\n\n\nscripted 3D plot\niMOD Python\n\n\n\ninteractive 3D plot\niMOD 3D Viewer\niMOD GUI\n\n\n\n\n\n\nTable 2: Supported MODFLOW6 flow packages in iMOD Suite & iMOD 5\n\n\n\n\n\n\n\n\nPackage\nDescription\niMOD Suite\niMOD 5\n\n\n\n\nDIS\nStructured Discretization\nx\nx\n\n\nDISV\nDiscretization by Vertices\nx\n\n\n\nDISU\nStructured Discretization\n\n\n\n\nIC\nInitial Conditions\nx\nx\n\n\nOC\nOutput Control\nx\nx\n\n\nNPF\nNode Property Flow\nx\nx\n\n\nHFB\nHorizontal Flow Barrier\nx\nx\n\n\nSTO\nStorage\nx\nx\n\n\nCSUB\nSkeletal Storage, Compaction, and Subsidence\n\n\n\n\nBUY\nBuoyancy\nx\n\n\n\nCHD\nConstant-Head\nx\nx\n\n\nWEL\nWell\nx\nx\n\n\nDRN\nDrain\nx\nx\n\n\nRIV\nRiver\nx\nx\n\n\nGHB\nGeneral-Head Boundary\nx\nx\n\n\nRCH\nRecharge\nx\nx\n\n\nEVT\nEvapotranspiration\nx\nx\n\n\nMAW\nMulti-Aquifer Well\n\n\n\n\nSFR\nStreamflow Routing\n\nx\n\n\nLAK\nLake\n\n\n\n\nUZF\nUnsaturated Zone Flow\nx\n\n\n\nMVR\nWater Mover"
  },
  {
    "objectID": "viewer_install.html",
    "href": "viewer_install.html",
    "title": "Install iMOD Viewer",
    "section": "",
    "text": "For the complete iMOD viewer (QGIS plugin and 3D viewer) can be installed using the Deltares installer. A working QGIS is needed before installing the iMOD viewer. It is also possible to install the QGIS plugin using the QGIS plugin repository. This installation is without the 3D viewer.\nThe different ways to install the QGIS plugin are described in Section 3.1, Section 3.2, and Section 3.3. Each of these, however, require the user to install QGIS. To install the QGIS plugin, we recommend running the iMOD Viewer installer (Section 3.1), which will both install the iMOD 3D viewer, as well as the iMOD QGIS plugin."
  },
  {
    "objectID": "viewer_install.html#sec-install_QGIS",
    "href": "viewer_install.html#sec-install_QGIS",
    "title": "Install iMOD Viewer",
    "section": "2 Installing QGIS",
    "text": "2 Installing QGIS\nYou can download the standalone QGIS setup [on the QGIS website] (https://qgis.org/en/site/forusers/download.html). We recommend downloading a QGIS version > 3.18 here. After downloading the QGIS setup, run it.\nThis installs a user installation of QGIS, which is sufficient in most cases. For a system wide installation, see Section 4."
  },
  {
    "objectID": "viewer_install.html#installing-the-imod-viewer",
    "href": "viewer_install.html#installing-the-imod-viewer",
    "title": "Install iMOD Viewer",
    "section": "3 Installing the iMOD Viewer",
    "text": "3 Installing the iMOD Viewer\nThe different options to install the iMOD Viewer are listed below. The iMOD Viewer consists of the iMOD QGIS plugin and iMOD 3D viewer.\n\n3.1 (Option 1) Install with the Deltares setup\nRun the .msi you can download on the Deltares download portal\nFollow the installation instructions for the viewer install, and make sure to do a Complete install.\n\n\n3.2 (Option 2) Installing from the QGIS plugin repository\nIn QGIS, navigate to Plugins > Manage and Install Plugins > All. In the search bar, type: “iMOD”. Select the iMOD plugin, and click “Install”.\nThis does not install the iMOD 3D Viewer; so for 3D viewing functionality, follow the instructions in Section 3.1, but instead select a Minimal install.\n\n\n3.3 (Option 3) Manually download and copy the iMOD QGIS plugin\nDownload the iMOD QGIS plugin code from the [Github page](https://github.com/Deltares/imod-qgis]\nUnpack the zip files, and copy the imodqgis folder to your QGIS plugin directory. This is probably located in your Appdata folder. In windows it is something such as: c:\\Users\\%USER%\\AppData\\Roaming\\QGIS\\QGIS3\\profiles\\default\\python\\plugins\nIf you cannot find the folder, follow [these instructions] (https://gis.stackexchange.com/a/274312>).\nIn QGIS, make sure under Plugins > Manage and Install Plugins > Installed that the checkbox iMOD is checked."
  },
  {
    "objectID": "viewer_install.html#sec-system-wide",
    "href": "viewer_install.html#sec-system-wide",
    "title": "Install iMOD Viewer",
    "section": "4 Advanced: Installing the QGIS plugin system-wide",
    "text": "4 Advanced: Installing the QGIS plugin system-wide\nThere are cases where a system-wide QGIS installation is required, for example on computational servers, where multiple users need to use the software. Requiring each user to install the plugin themselves can be a burden.\nThis requires the following steps:\n\nInstalling the OSGeo4W QGIS installation\nPutting the plugin files in the right folder.\n\n\n4.1 Installing the OSGeo4W QGIS installation\n\nDownload the OSGeo4W installer from the QGIS website <https://qgis.org/en/site/forusers/download.html>_\nRight-click osgeo4w-setup.exe and click Run as administrator\nAt the starting screen, choose Advanced Install\nIn the Choose Installation Type screen, choose Install from Internet if you have access to the internet, this will download the files to a folder called something like: %APPDATA%\\Local\\Temp\\http%3a%2f%2fdownload.osgeo.org%2fosgeo4w%2fv2%2f\\\nYou can use this folder to Install from Local Directory later (for example on a restricted server)\nIn Choose Installation Directory check All Users\nIn “Select Local Package Directory”, you can leave the default options\nIf you previously checked “Install from Internet”:\n\nin the Select Connection Type, choose Direct Connection\nin Choose Download Sites, choose http://download.osgeo.org\n\nIn the Select Packages screen, make sure the following components are installed:\n\nunder Desktop, qgis: QGIS Desktop.\nunder Libs, python3-pandas\n\nA component will be installed if there is a version number in the “New” column (If Skip change this by clicking the cell with Skip in it).\nAfter downloading an installing, check Finish\n\n\n\n\n\n\n\nTip\n\n\n\nMaximize the screen to see the package names\n\n\n\n\n\nThe Select packages screen enlarged. If you click Skip, a version number should appear in the column New.\n\n\n\n\n4.2 Putting the plugin files in the right folder\nDownload the iMOD QGIS plugin code from the Github page\nUnpack the zip files, and copy the imodqgis folder to your QGIS plugin directory. This is probably located in your Appdata folder. In windows it is something such as: c:\\OSGeo4W\\apps\\qgis\\python\\plugins\\imodqgis"
  },
  {
    "objectID": "deltaforge_install.html",
    "href": "deltaforge_install.html",
    "title": "Install iMOD Python with Deltaforge",
    "section": "",
    "text": "Deltaforge is a python distribution which includes iMOD Python and all its dependencies. It is provided as an installer and makes installing iMOD Python easy.You can download the Deltaforge installer via this link. If the subscription worked correctly, you will receive a download link via e-mail within only a few minutes."
  },
  {
    "objectID": "deltaforge_install.html#installation",
    "href": "deltaforge_install.html#installation",
    "title": "Install iMOD Python with Deltaforge",
    "section": "Installation",
    "text": "Installation\nTo install Deltaforge, double-click the executable, this will open the installation Wizard. You will be greeted with the welcome screen.\n\n\n\nThe welcome screen\n\n\nClick \"Next\", and then \"I agree\" in the license agreement.\n\n\n\nLicense agreement screen\n\n\nNext, you get to decide what type of installation you want. On your local machine it suffices to select Just me. If you are an admin of a server and you want to let others enjoy the Deltaforge installation as well, click All Users.\n\n\n\nThe installation type screen\n\n\nNext you get to decide where the python environment is installed. The default location is usually fine.\n\n\n\nThe location of the python installation\n\n\nFinally, some further configuration is possible. The screenshots contains the options we recommend.\n\n\n\nInstallation options with the recommended options selected."
  },
  {
    "objectID": "deltaforge_install.html#using-deltaforge",
    "href": "deltaforge_install.html#using-deltaforge",
    "title": "Install iMOD Python with Deltaforge",
    "section": "Using Deltaforge",
    "text": "Using Deltaforge\nThe easiest way to start your environment is by pressing the Windows Key and start typing deltaforge. This will let you select the Deltaforge Prompt. Select this.\n\n\n\nThe Deltaforge Prompt should be findable in the Windows start menu\n\n\nThis will start a command prompt screen (cmd.exe), where at startup the Deltaforge python environment is activated.\n\n\n\nThe Deltaforge prompt. You can type mamba list to view all the packages installed.\n\n\nTo view all the packages installed in the environment you can type mamba list and press Enter. This will list all packages installed in the environment. If you want to start coding, you can type spyder, which will start Spyder, a Python scientific development environment."
  },
  {
    "objectID": "coupler_index.html",
    "href": "coupler_index.html",
    "title": "iMOD Coupler",
    "section": "",
    "text": "Deltares have worked together with the USGS to create the MODFLOW API , based on the Basic Model Interface (BMI) with some extensions. The first version of this functionality became available with the release of MODFLOW 6.2.0. BMI is a set of standard control and query functions that, when added to a model code, make that model both easier to learn and easier to couple with other software elements. Furthermore, the BMI makes it possible to control MODFLOW 6 execution from scripting languages using bindings for the BMI.\nWe have also developed xmipy, a Python package with bindings for the API, which allow you to run and update (at runtime) a MODFLOW 6 model from Python. This allows coupling MODFLOW 6 to other computational cores. One of its first applications is a coupling of MODFLOW 6 to MetaSWAP, as part of the iMOD Coupler package. Other applications can be found in this paper."
  },
  {
    "objectID": "coupler_index.html#source-code",
    "href": "coupler_index.html#source-code",
    "title": "iMOD Coupler",
    "section": "Source Code",
    "text": "Source Code\nThe developments on xmipy can be found on: https://github.com/Deltares/xmipy\nThe example of imod_coupler with the coupling between MODFLOW 6 and the unsaturated zone model MetaSWAP can be found on: https://github.com/Deltares/imod_coupler"
  },
  {
    "objectID": "coupler_index.html#known-issues",
    "href": "coupler_index.html#known-issues",
    "title": "iMOD Coupler",
    "section": "Known Issues",
    "text": "Known Issues\n\niMOD v5.2 release\nThe MetaSWAP and Modflow6 libraries provided with iMOD 5.2 for imod_coupler were not statically linked. This could result in the following error:\nFileNotFoundError: '''Could not find module \"\\path\\to\\MetaSWAP.dll\" (or one\nof its dependencies). Try using the full path with constructor syntax.'''\nThis is caused by not having the Intel redistrutable libraries on the system. These can be downloaded from this page. Make sure to choose the correct platform and the version for 'Parallel Studio XE 2020'."
  },
  {
    "objectID": "viewer_index.html",
    "href": "viewer_index.html",
    "title": "iMOD Viewer",
    "section": "",
    "text": "The iMOD Viewer consist of a standalone 3D viewer and a QGIS plugin.\n\nThe iMOD 3D Viewer is a 3D viewer for grids and datasets. It supports IDF files, UGRID files and Grb.disu files that contain an unstructured layered grid.\nThe 3D Viewer also supports viewing some non-grid objects like IPF files and Shapefiles.\nThe iMOD QGIS plugin aids exploring 4D geospatial data in QGIS.\nIts primary components are visualization of timeseries, both at points as well as on an unstructured grid, cross-section visualization, including borelogs, and connecting to the 3D Viewer."
  },
  {
    "objectID": "3dviewer_user_manual.html",
    "href": "3dviewer_user_manual.html",
    "title": "3D Viewer User Manual",
    "section": "",
    "text": "The iMOD 3D Viewer is a viewer for grids and datasets. In this manual we consider a grid to be a region of space that is subdivided into cells. A grid input file contains the geometry of these cells, often as a list of vertex coordinates and cell-vertex connections.\nA dataset is a list of values associated to the cells or vertices of a grid. A dataset can contain for example a porosity or hydraulic head for every cell in the grid. A dataset can have an associated time. In an input file, a dataset is usually just a list of values where value number N is associated to cell number N in the grid.\nThe iMOD 3D Viewer is used for viewing the grids in 3D, and for plotting datasets on top of the grids using a color legend. To gain more insight in the data, the color legend can be edited, and the values of individual cells can be inspected. Slider tools allow viewing the inside of 3D bodies."
  },
  {
    "objectID": "3dviewer_user_manual.html#relationship-with-qgis",
    "href": "3dviewer_user_manual.html#relationship-with-qgis",
    "title": "3D Viewer User Manual",
    "section": "Relationship with QGIS",
    "text": "Relationship with QGIS\nThe iMOD 3D Viewer can be used as a standalone or in combination with the iMOD QGIS plugin. From this plugin, the viewer can be launched, and grids can be loaded into it. Using the QGIS plugin is currently the only way to create fence diagrams in the viewer. Also, the QGIS plugin allows for specifying a bounding box for UGRID files. When this option is used, the viewer only loads the part of the grid in an UGRID file that is inside the bounding box."
  },
  {
    "objectID": "3dviewer_user_manual.html#features",
    "href": "3dviewer_user_manual.html#features",
    "title": "3D Viewer User Manual",
    "section": "Features",
    "text": "Features\nThe iMOD 3D Viewer supports visualizing grids in the following file formats:\n\nIDF files. Both equidistant and non-equidistant UGRIDs are supported.\nUGRID files. the iMOD 3D Viewer can read UGRIDs that contain exclusively 2D elements such as triangles, quadrilaterals and other polygons. 1D and 3D elements are not supported. In some cases, a layered grid can be encoded as a 2D grid with certain properties. See the Layered UGRID chapter for more detail.\nGrb.disu files. These files are written by modflow and contain an unstructured layered grid used in a modflow simulation. Only the grid can be loaded; datasets cannot be loaded (yet)\n\nThe iMOD 3D Viewer also supports viewing some non-grid objects.\n\nIPF files. These files contain tables of numeric and text data, separated by commas and whitespace, and with a small file header containing the column names. IPF files can be rendered as a collection of points (the user chooses which columns to use for x, y, and z coordinates) or vertical cylinders (the user chooses which columns to use for x, y, top and bottom). The intended use of this is to visualize for example borehole locations, observations wells, production wells or well filters.\nShapefiles. These can be used to add geographical context, by adding rivers or province boundaries to the view. Only vector-type shapefiles can be show, and only the linestrings, polygons and multipolygons in it are imported.\n\nThe iMOD 3D Viewer can show fence diagrams. This only works when used in combination with the iMOD QGIS plugin"
  },
  {
    "objectID": "3dviewer_user_manual.html#general-workings",
    "href": "3dviewer_user_manual.html#general-workings",
    "title": "3D Viewer User Manual",
    "section": "General Workings",
    "text": "General Workings\n\niMOD 3D Viewer solutions and autosave file\n\n\n\nFigure 1: File menu options for saving and loading projects.\n\n\nThe list of open files, along with the chosen legends and IPF column mappings, can be saved into an iMOD 3D Viewer solution file. To do this, open the file menu and choose “save” or “save as”.\nThe resulting file can be opened with the “open project file” option.\nAn autosave file is automatically created or updated when opening a grid, overlay or IPF file, or when editing a legend or an IPF column mapping. This autosave file therefore reflects the state of the viewer more or less recently and is stored in the appdata directory, most likely this:\nC:\\\\Users\\\\yourname\\\\AppData\\\\Roaming\\\\IMOD6\n\n\nThe explorer sidebar\nWhen a file is opened- for example a file containing a grid- then automatically entries are added to the sidebar of the application. These entries represent the grids and datasets in the file and allow you to interact with them (Figure 2).\n\n\n\nFigure 2: The explorer sidebar shows the objects that are available for viewing as a tree structure\n\n\nThe explorer sidebar shows the objects that are available for viewing as a tree structure\nIn the example in Figure 2, the content of the explorer sidebar is shown. In this example, the sidebar contains a shapefile (a map of the waterboards that is used for orientation of the user only); and IPF file containing boreholes, and a layered UGRID file.\nAll The shapefile and the grid are shown in the viewer, which is why they are bold. The IPF is not shown in the viewer and is not bold. The shapefile and the IPF file are each only one line in the sidebar. The layered UGRID is a tree-node that can be expanded or collapsed as desired. For all three of these, a context menu will appear when a right mouse click is performed on it.\nThe layered UGRID root node is called “Dommel-test.nc”. this represents the whole UGRID file. This node can be expanded to show the following nodes:\n\na grouping node called “All Layers”. This node has no context menu and is never bold.\n\nan entry for each layer. They have the same name as the inputfile, with the suffix “_layer_X” where X is the layer number. Layers are shown in boldface when the layer is shown in the viewer. A context menu appears on a right mouse click on this node.\n\nthe available datasets per layer. In this case, “bottom_layer_x”, “thickness_layer_x”, “top_layer_x”, “Elevation (cell centre)_layer_x”. These datasets are shown in bold if they are visible in the viewer. Only one dataset per layer can be shown in the viewer. A dataset is shown in the viewer when double-clicked with the left mouse button.\n\n\nA grouping node called “Layered datasets”. This node has no context menu and is never bold.\n\nAn entry for layered datasets. These entries are used to synchronise the dataset that is shown for all the layers of the grid. This means that if we double-click the layered dataset “bottom”, then grid layer 1 (if visible) will show dataset “bottom_layer_1”; grid layer N will show “bottom_layer _N” etcetera. A context menu appears when doing a right mouse click on this node, allowing you to set a legend for all layers at once.\n\n\n\n\nLoading and unloading objects\nObjects can be added to the explorer\n\nThrough the QGIS plugin ( see the manual of that)\nBy opening the “data”menu and selecting “open grid” (for UGRID, IPF,or grb.disu files); “open overlay” ( for shapefiles) ; or “open point data” (for IPF files)\n\nWhen the second method is used, then the objects appear in the sidebar but not in the viewer. They have to be loaded into the viewer in a second step. To do that, select the objects you want to see in the sidebar and click the “draw selected layers” button. () (Figure 3).\n\n\n\nFigure 3: In order to visualize a grid in the viewer, select the grid and then press the green button.\n\n\nWhen an object is visualized in the viewer, its name appears in boldface in the explorer.\nWhen the “draw selected layers” button () is pressed, all object that are not selected are unloaded from the viewer and are no longer bold, except if they are locked.\n\n\nHow to visualize data on a grid\nIn order to visualize a dataset on a grid, first visualize the grid itself. Then double-click on one of the datasets in the explorer.\nOnce visualized, the dataset will appear in boldface in the explorer (Figure 4).\n\n\n\nFigure 4: The dataset 'water level' is visualized on the grid and is marked in bold in the explorer.\n\n\nCurrently, only datasets that hold scalar values associated to cells can be shown.\n\n\nLocking mechanism\nTop level nodes can be “locked” and grid layer nodes can be\nWhen a node is “locked”, the object it represents is no longer automatically unloaded when the “draw selected layers” () is pressed. It can still be moved or deleted through the context menu.\nTo lock a node, select it and press L (lowercase or uppercase) on the keyboard. A padlock icon now appears next to it (Figure 5).\nTo unlock it, press O (lowercase or uppercase) on the keyboard. Now an open padlock icon appears.\n\n\n\nFigure 5: The padlock icon shows if a node is locked or unlocked\n\n\n\n\nMoving objects in the treeview\nTop level nodes can be moved up and down the treeview, allowing you to order the objects as you see fit.\nTo move an item in the treeview, select it with the mouse and then press u (up) or d (down) to move the object.\n\n\nHow to delete an object\nTo delete an object (grid, overlay or IPF cylinders) , right click on it in the explorer. Now a context menu appears. Choose the option “delete” to have the grid removed from the explorer. If you want to stop visualization of the grid without removing it from the explorer, use the redraw button instead. In the explorer, select the grids you want to be visualized, and make sure the grids you want to be unloaded are unselected. Then press redraw.\n\n\nUsing the time-slider\nSome datasets vary through time. The iMOD 3D Viewer currently supports 2 cases:\n\nthe dataset does not have a time associated. In this case it is called “invariant” in the UI\nthe dataset has one or more sets of values, each one with a specific point in time associated ( so not an interval!). This time must be an actual date-time; we don’t support dimensionless time or unreferenced time.\n\n\n\n\nFigure 6: Tools and texts related to time in the UI\n\n\nFigure 6 shows the location of tools and texts in the UI that help the user orientate in and step through the time dimension of datasets. First note the time displayed in the top toolbar (1). This is the “viewer time”, the time the viewer is currently trying to display. Since the time discretization can be different per dataset and we can show different datasets and grids simultaneously, it is not guaranteed that all datasets currently in the viewer can be shown for this specific time! Hence, in the sidebar it is shown at what time the datasets are actually diplayed (2).\nThe viewer time can be selected using the slider. It varies over the temporal range of all displayed datasets combined- this means that when you display another dataset, the range of the slider could change. The scaling of the slider is based on the time indexes, not on the time value itself. This means that if you have dataset values for 3 times, the slider will be divided in 2 equally sized intervals- and you would be able to select the beginning, halfway and the end of the slider, regardless of how much actual time there is between these 3 times.\nWhen there are many times available, the resolution of the slider becomes very fine and it can then be more convenient to use the “next time”and “previous time” buttons, which increment and decrement the slider one position. There is also a “rewind” button to move the slider to its lowest value.\nFinally, it is possible to animate plots using a “play” button. This moves the slider one step forward per second, or slower if updating the plot takes longer. The animation can be stopped using the “stop” button.\nThe decision on what time to display for each dataset is taken as follows (see Figure 7):\n\ninvariant datasets are shown regardless of the viewer time’\nif a dataset has a value at the viewer time this value is shown\nif it has no value at the viewer time but it has a value earlier than the viewer time then this value is shown\nif it has no value at the viewer time and no value earlier than the viewer time then the first time after the viewer time is shown.\n\n\n\n\nFigure 7: Times displayed for different dataset for a given viewer time (the vertical line). The blue dots indicate the times at which a dataset has values. The red dots indicate the values displayed.\n\n\n\n\nProperty windows\nBy right-clicking on grids or datasets in the explorer, a context menu appears. In it, there is usually a “properties” option which opens a form displaying some of the properties of the object- and sometimes it allows setting some properties as well. Here are a few examples:\n\n\n\nFigure 8: Property windows, from left to right for a grid, a layered grid and a dataset"
  },
  {
    "objectID": "3dviewer_user_manual.html#how-to-use-the-viewer",
    "href": "3dviewer_user_manual.html#how-to-use-the-viewer",
    "title": "3D Viewer User Manual",
    "section": "How to use the viewer",
    "text": "How to use the viewer\nThe following controls work if the mouse pointer is in the viewer area:\nSpinning the mouse wheel forward: zooms in\nSpinning the mouse wheel backward: zooms out\nHold shift key, while pressing the right mouse key, and move the mouse: moves the camera horizontally, corresponding to the mouse movement\nHold ctrl key, while pressing the right mouse key, and move the mouse: this rotates the camera around its lens.\nClicking on a grid: this selects or unselects the grid. When a grid is selected, its name appears in red in the explorer. Only one grid can be selected at any time. A grid must be selected in order to change its legend, or to inspect its cells values. This way of selecting a grid can be slow for larger grids. Grids can also be selected by using the context menu of the grid in the sidebar. It has an option Select in viewer.\nPressing the “zoom to extent” button (  ) in the toolbar: zooms out until all the grids that are visualized in the current viewer fit on the screen.\nIn the 3D viewer the following also works:\nHold the right mouse button while moving the mouse: this moves the camera in a trajectory around the grid. The direction and length of the mouse movement determine the amount of camera movement.\n\n\n\nFigure 9: Some of the viewer controls are also implemented by buttons.\n\n\nUsing the toolbar buttons to control the viewer As shown in Figure 9, there are also buttons in the toolbar to control the viewer. From left to right in this figure, the buttons do the following\n\nzoom to extent. use this button to get a top view of the grid, zoomed out so that all of it is visible\nright(+x). use this button to position the camera so that we look in the +x direction, zoomed out so that the whole y and z range of the grid is visible.\nleft(-x). use this button to position the camera so that we look in the -x direction, zoomed out so that the whole y and z range of the grid is visible.\nfront(-y). use this button to position the camera so that we look in the -y direction, zoomed out so that the whole x and z range of the grid is visible.\nback(+y). use this button to position the camera so that we look in the +y direction, zoomed out so that the whole x and z range of the grid is visible.\npan. Once this button is pressed, the camera can be dragged. Position the mouse anywhere in the viewer and keep the left mouse button pressed while dragging.\nzoom out.\nzoom in.\n\n\nHow to use clipping\nThe clipping functionality allows one to “cut off” slices of one or more grids in the 3D viewer. The internals of the grids are then exposed, allowing us to see the value of datasets or the grid geometry inside.\nTo use clipping, open the 3D viewer and visualize one or more grids on it. Then press the clipping button in the toolbar (Figure 10).\n\n\n\nFigure 10: Activate clipping mode by pressing the clipping button in the toolbar. Sliders appear in the 3D viewer.\n\n\nNow use the sliders to clip the model. Each slider represents the combined range of all the grids in the viewer in one direction.\n\n\n\nFigure 11: Use sliders to cut model in each direction\n\n\n\n\nHow to plot gridlines\nIt is possible to plot geographical gridlines on top of a grid (Figure 12). This feature only works well at near-vertical viewing angles.\n\n\n\nFigure 12: Toggle gridlines with the gridlines button\n\n\n\n\nHow to change the vertical exaggeration\nIn the 3D viewer, objects can appear to be flat when they are not, because the range in the x and y directions for geological structures is often much larger than the range in the z direction. For example, geological layers may extend for tens or hundreds of kilometers horizontally but have a thickness and height variation of tens of meters.\nTo fix this issue, vertical exaggeration can be applied. The same vertical exaggeration is applied to all the visible grids.\nBy default, a vertical exaggeration is computed from the grid geometry. It computes a vertical exaggeration such that the vertical variation becomes at least 10% of the horizontal variation.\nThe exaggeration factor can also be set manually. To do so, disable the Use automatic exaggeration of z-axis slider and enter the desired value in the text field above it (Figure 13).\n\n\n\nFigure 13: Vertical exaggeration slider and text field\n\n\n\n\nHow to change the representation of a grid\nIn the 3D viewer, grids can be visualized as solid bodies (Figure 14); as wireframes and as point clouds. In wireframe mode, only the edges of the cells are drawn, allowing one to look inside the grid. In point cloud mode, only points corresponding to the cell centers are shown\nTo change the representation, use the dropdown in the viewer toolbar. Once selected, a dropdown appears where the representation can be changed. All visible grids get the selected representation.\n\n\n\nFigure 14: The 3 representations of a grid. Left the Surface representation, in the centre Wireframe, and right the Point representation.\n\n\nThe representation can also be changed from the property window of a grid. Here some other tweaks can also be made, like highlighting cell edges or changing the opacity of the plot."
  },
  {
    "objectID": "3dviewer_user_manual.html#changing-the-legend-of-a-ugrid-dataset-idf-or-fence-diagram-grid.",
    "href": "3dviewer_user_manual.html#changing-the-legend-of-a-ugrid-dataset-idf-or-fence-diagram-grid.",
    "title": "3D Viewer User Manual",
    "section": "Changing the legend of a UGRID dataset, IDF or fence diagram grid.",
    "text": "Changing the legend of a UGRID dataset, IDF or fence diagram grid.\nTo edit the legend of a dataset in an UGRID file, IDF file or fence diagram, it is necessary to load the legend editor form. From there, the legend can be customized.\nThe way to make the legend editor appear, depends on the object.\nFor an IDF file, or a single layer of a layered UGRID file, or a non-layered UGRID file, do the following:\n\nIf not done yet, double click on the dataset to make it appear in the viewer\nOpen the context menu of the IDF file or grid layer\nPress Select in viewer\nPress the edit legend button () .\n\nFor a layered ugid dataset (so applying on all layers at the same time)\n\nRight click on the data set you want to apply the legend to\nFrom the context menu, select Edit legend\n\n\nThe legend editor\nThe legend editor consists of 2 tabs: one for continuous legends and one for discrete ones (Figure 15).\nThis form is more or less self explanatory. You can choose a color scale (currently rainbow or blue-white-red). Note that it is possible to save a legend in a separate file, or to load a legend from such a file, with the Save and Load buttons.\n\n\n\nFigure 15: The 2 tabs of the legend editor\n\n\nWhen using a percentile legend, colors are assigned to a cell based on the percentage of cells that hold a value lower than that of the current cell. The color map is distorted to reflect this. For example, when using the “heat map” legend, the lowest value is blue, the highest red, and the middle of the range is white. When using a heat map with percentiles, the white color represents not the middle of the range, but the value for which 50% of other values is smaller than itself (Figure 16).\nFor unstructured grids, note that the percentile calculation does not take cell area into account. For example, for a dataset with lot of small cells and a few large cells, the percentile legend will be skewed towards the values of the small cells.\n\n\n\nFigure 16: Heat map legend with percentiles on and off. Without percentiles (left), the white color is the middle of the legend range. With percentiles on (right),the color map is distorted and white is now the median value (50%) of the dataset. In general, a color that represents N % of the range in the linear legend, is mapped to the value that is larger than N % of the data in the percentiles legend.\n\n\n\n\nLegend sidepane\nFor quick reference, the legend is shown on a retractable sidepane. To open or close it, use the button highlighted in the figure below.\n\n\n\nWorking with fence diagrams\nFence diagrams have the same user interface as layered UGRID files. They have the same layers as the original layered UGRID they cut through, and the same datasets. Their legend can be set per-layer or for the whole fence diagram in the same way as we do for layered UGRIDs."
  },
  {
    "objectID": "3dviewer_user_manual.html#working-with-ipf-files",
    "href": "3dviewer_user_manual.html#working-with-ipf-files",
    "title": "3D Viewer User Manual",
    "section": "Working with IPF files",
    "text": "Working with IPF files\nTo visualize an IPF file, open the data menu and click on open overlay file. An open file dialog appears. Select an IPF file. As with grids, the filename is then displayed in the explorer bar, but the IPF file is not yet rendered. To render it, select the IPF’s row in the explorer bar and hit the  button.\nOn import, the iMOD 3D Viewer will attempt to draw a vertical cylinder for each row in the IPF file’s data block (so excluding the header).\nBy default, a column called “x”or “X” and “y” or “Y” are used for the center of the cylinder’s top and bottom; and “top”or “TOP” and “bot” or “BOT” are used for the z-coordinates of the cylinders top and bottom, respectively.\nIf these columns are not present or if they contain text data, then the first 3 numerical columns are used for x, y and z, and the IPF data is plotted as points on these locations (Figure 17).\n\n\n\nFigure 17: When the default column names are not found an error message appears.\n\n\nTo adjust the column mapping, right click on the IPF’s row in the explorer bar and select the “Properties” menu option. Then a window appears where the column mapping can be updated (Figure 18).\n\n\n\nFigure 18: Property window allows to choose what IPF columns to use for drawing cylinders.\n\n\nThe z0 and z1 comboboxes will be used for the cylinder’s top and bottoms respectively. If the z1 column is not set, then points will be generated instead of cylinders.\nThe Label column combobox allows choosing a combobox to be used for labels. If not set, then no labels are shown. Otherwise the content of the selected column will be shown as a text label near the top of the column.\nThe IPF column mapping is serialized into solution and autosave files, and the next time a solution is loaded, the last-used column mapping will be assigned to each IPF file.\nAs with overlays, the color and cylinder thickness can be adjusted from the context menu of the IPF file.\n\n\n\nFigure 19: Image of an IPF plot with labels, viewed from the top.\n\n\n\nPlotting borehole data\nWhen the IPF file contains references to additional datafiles, one for each row in the IPF file, and when these datafiles contain 1D borehole data, then this data can be plotted on the cylinders.\nTo do that, check the option “Plot data on cylinder” on the IPF property form (Figure 20) . Both real number data and string data can be plotted. When the checkbox is checked, a legend the appears on the form proposing a color mapping. This legend is either a continuous scale (for real numbers) or a string-to-color mapping like in the example in Figure 20. The colors can be changed by clicking on a particular color box.\nThese legends can be saved and loaded as well.\n\n\n\nFigure 20: 1D borehole data can be plotted on cylinders generated from the IPF file. Both real number data and string data can be plotted. In this example, string data was present in the \"Admixture\" column"
  },
  {
    "objectID": "3dviewer_user_manual.html#working-with-idf-files",
    "href": "3dviewer_user_manual.html#working-with-idf-files",
    "title": "3D Viewer User Manual",
    "section": "Working with IDF files",
    "text": "Working with IDF files\n\nIDF file resolution\nAn IDF files contains a 2D structured grid, and 1 dataset with cell data. This dataset is treated for visualization purposes as if it were elevation, but it can be anything. The resolution is sometimes so high it makes the grid slow to load. Therefore, an automatic upscaling is applied when visualizing the grid, reducing the number of cells to approximately 100*100. Each upscaled cell contains an integer number of actual cells in both the x and y directions; therefore cell boundaries in the upscaled grid are guaranteed to coincide with cell boundaries in the actual grid.\nThe “elevation” value of each upscaled cell is taken from the actual cell that contains the upscaled cell’s center.\nTo increase the resolution of the IDF grid in the viewer, zoom in with the mouse wheel to the area where additional detail is required. Then press the redraw button( ).\nThis renders the area visible in the viewer in higher resolution, but removes the invisible parts of the grid (Figure 21{.interpreted-text role=“numref”}). To restore those, zoom out again and press  again.\n\n\n\nFigure 21: Left, an upscaled IDF file. Middle: after zooming in on an area of interest. Right: after pressing the redraw button to increase resolution.\n\n\nAnother way to change the resolution of an IDF file is to select the IDF’s row in the explorer bar and clicking on “resolution” (Figure 22). This allows choosing a resolution of 100x100, 250x250 or 500x500 for the IPF file (Figure 23).\n\n\n\nFigure 22: Choose the resolution of the IDF file\n\n\n\n\n\nFigure 23: IDF file at resolution 100x100 (left); 250*250(middle) and 500x500 (right)\n\n\n\n\nAdditional representation options for IDF files\nThe options outlined above change the way each cell is rendered, but they do not change the underlying geometry of the cells. For IDF files we have an additional option. IDF cells are horizontal rectangles, and a surface formed by an IDF grid may look strange in the 3D viewer because these rectangles “float” at different elevations (Figure 25). Therefore, an additional option of rendering an IDF grid as triangles was added. The corner points of the triangle are the cell-centers of the rectangles, and have the elevation of that rectangle.\nTo change the representation of an IDF file, load the IPF file and then right-click on its entry in the explorer bar. A context menu appears (Figure 24). Choose rectangles or triangles as desired.\n\n\n\nFigure 24: Context menu for changing representation of an IDF file\n\n\n\n\n\nFigure 25: An IDF file rendered as rectangles (left) and triangles (right)"
  },
  {
    "objectID": "3dviewer_user_manual.html#working-with-shapefiles",
    "href": "3dviewer_user_manual.html#working-with-shapefiles",
    "title": "3D Viewer User Manual",
    "section": "Working with shapefiles",
    "text": "Working with shapefiles\nTo visualize an overlay, open the data menu and click on “open overlay file”. An open file dialog appears. Select a shapefile containing vector data. As with grids, the filename is then displayed in the explorer bar, but the overlay is not yet rendered. To render it, select the overlay’s row in the explorer bar and hit the  button.\nOnce loaded, the line thickness and color of the overlay can be changed by right clicking on the overlay’s row in the explorer bar. This makes a context menu appear (Figure 26). There is a menu option for changing the color and one for changing the line thickness.\n\n\n\nFigure 26: Context menu options for changing the color and line thickness of an overlay."
  },
  {
    "objectID": "3dviewer_user_manual.html#how-to-inspect-dataset-values-of-a-cell",
    "href": "3dviewer_user_manual.html#how-to-inspect-dataset-values-of-a-cell",
    "title": "3D Viewer User Manual",
    "section": "How to inspect dataset values of a cell",
    "text": "How to inspect dataset values of a cell\nWhen we visualize a dataset, its values are used to assign a color to each cell; the value to cell mapping is defined by the legend. Hence, inspecting the plot of a dataset gives a rough idea of the value of that dataset in each cell.\nTo get a more precise value, it is possible to click on a cell and get a list of the values of different datasets in that cell. Take the following steps to do this (Figure 27):\n\nVisualize a grid in the viewer and select it.\nPress the “identify” button in the toolbar.\nSelect some datasets of the selected grid in the explorer\nClick on a cell of the grid. It will be highlighted in black.\nNow a window opens showing the values of the selected datasets in the selected cell.\n\nTo end identifying, press the “identify” button again.\n\n\n\nFigure 27: Dataset values can be inspected with the identify button"
  },
  {
    "objectID": "3dviewer_user_manual.html#layered-ugrid",
    "href": "3dviewer_user_manual.html#layered-ugrid",
    "title": "3D Viewer User Manual",
    "section": "Layered UGRID",
    "text": "Layered UGRID\nThe iMOD 3D Viewer currently supports only 2D UGRID files. However, when it recognizes that datasets called layer_1_top and layer_1_bottom are present (1 being a layer number), it will create a 3D grid using the x and y coordinates from the 2D grid, and the top and bottoms from the datasets. The result is a grid with cells that have horizontal and vertical cell faces, and that can represent for example a geological layer. Additional datasets (layer_2_top and layer_2_bottom) can be provided to create additional layers. The grids created this way will all have the same x and y positions for their nodes, but due to the top and bot datasets, they are at different depths. There can be holes between the layers to represent for example aquicludes.\nEach layer is shown in the explorer as a separate grid that can be loaded and unloaded independently. Properties can be assigned to each layer by listing the layer number in the dataset name. For example, we can assign a kD property to each layer by creating datasets called kD_layer_1, kD_layer_2, etcetera.\nAn example to convert a layered subsurface model in *.idf to a UGRID file can be found on https:/gitlab.com/deltares/imod/imod-python/-/snippets/2104179\n\n\n\nFigure 28: A 2D UGRID file rendered as a layered 3D grid\n\n\n\n\n\nFigure 29: View on internals of UGRID that can be used for rendering as a 3D layered grid"
  },
  {
    "objectID": "tutorial_wq.html",
    "href": "tutorial_wq.html",
    "title": "Conceptual fresh-salt model",
    "section": "",
    "text": "In this example we create an example fresh-salt groundwater model of a strip-shaped freshwater lens, which could be a very simple analogue of a barrier island.\nThe workflow consists of the following steps:\n\nCreating a model with an iMOD-python script\nRunning the model in a terminal with iMOD-WQ\nUse iMOD-python to post-process the model output (IDF) to a data format supported by QGIS (UGRID)\nViewing a cross-section in iMOD QGIS plugin\nUse the plugin to view the results in the iMOD 3D viewer"
  },
  {
    "objectID": "tutorial_wq.html#creating-a-model",
    "href": "tutorial_wq.html#creating-a-model",
    "title": "Conceptual fresh-salt model",
    "section": "Creating a model",
    "text": "Creating a model\nThe iMOD-python script below creates a simple 3D iMOD-WQ model.\nTo install iMOD-python, see these instructions.\nWe define a middle strip which has fresh recharge (rch) applied, and the sides have a fixed concentration (bnd = -1) of 35 (sconc = 35.) in the top layer. This creates freshwater lens along the strip.\nimport numpy as np\nimport xarray as xr\n\nimport imod\n\n\n# Discretization\nnrow = 40  # number of rows\nncol = 40  # number of columns\nnlay = 15  # number of layers\n\ndz = 10\ndx = 250\ndy = -dx\n\nx = np.arange(0.5 * dx, dx * ncol, dx)\ny = np.arange(-dy * ncol, 0.5 * -dy, dy)\n\n# setup ibound\nbnd = xr.DataArray(\n    data=np.full((nlay, nrow, ncol), 1.0),\n    coords={\n        \"y\": y,\n        \"x\": x,\n        \"layer\": np.arange(1, 1 + nlay),\n        \"dx\": dx,\n        \"dy\": dy,\n    },\n    dims=(\"layer\", \"y\", \"x\"),\n)\n\n# set constant heads\nbnd[0, :, 0:12] = -1\nbnd[0, :, 28:40] = -1\n\n# set up tops and bottoms\ntop1D = xr.DataArray(\n    np.arange(nlay * dz, 0.0, -dz), {\"layer\": np.arange(1, nlay + 1)}, (\"layer\")\n)\n\ntop3D = top1D * xr.full_like(bnd, 1.0)\nbot = top3D - dz\n\n# Defining the starting concentrations\nsconc = xr.DataArray(\n    data=np.full((nlay, nrow, ncol), 35.0),\n    coords={\n        \"y\": y,\n        \"x\": x,\n        \"layer\": np.arange(1, nlay + 1),\n        \"dx\": dx,\n        \"dy\": dy,\n    },\n    dims=(\"layer\", \"y\", \"x\"),\n)\n\nsconc[0, :, 13:27] = 0.0\n\n# Defining the recharge rates\nrch_rate = xr.DataArray(\n    data=np.full((nrow, ncol), 0.0),\n    coords={\"y\": y, \"x\": x, \"dx\": dx, \"dy\": dy},\n    dims=(\"y\", \"x\"),\n)\nrch_rate[:, 13:27] = 0.001\n\nrch_conc = xr.full_like(rch_rate, fill_value=0.0)\n\n\n# Finally, we build the model.\n\nm = imod.wq.SeawatModel(\"FreshwaterLens\")\nm[\"bas\"] = imod.wq.BasicFlow(\n    ibound=bnd, top=top3D.sel(layer=1), bottom=bot, starting_head=0.0\n)\nm[\"lpf\"] = imod.wq.LayerPropertyFlow(\n    k_horizontal=10.0, k_vertical=20.0, specific_storage=0.0\n)\nm[\"btn\"] = imod.wq.BasicTransport(\n    icbund=bnd, starting_concentration=sconc, porosity=0.35\n)\nm[\"adv\"] = imod.wq.AdvectionTVD(courant=1.0)\nm[\"dsp\"] = imod.wq.Dispersion(longitudinal=0.0, diffusion_coefficient=0.0)\nm[\"vdf\"] = imod.wq.VariableDensityFlow(density_concentration_slope=0.71)\nm[\"rch\"] = imod.wq.RechargeHighestActive(rate=rch_rate, concentration=0.0)\nm[\"pcg\"] = imod.wq.PreconditionedConjugateGradientSolver(\n    max_iter=150, inner_iter=30, hclose=0.0001, rclose=0.1, relax=0.98, damp=1.0\n)\nm[\"gcg\"] = imod.wq.GeneralizedConjugateGradientSolver(\n    max_iter=150,\n    inner_iter=30,\n    cclose=1.0e-6,\n    preconditioner=\"mic\",\n    lump_dispersion=True,\n)\nm[\"oc\"] = imod.wq.OutputControl(save_head_idf=True, save_concentration_idf=True)\nm.time_discretization(times=[\"1900-01-01T00:00\", \"2000-01-01T00:00\"])\n\n# Now we write the model, including runfile:\nm.write(\"FreshwaterLens\")\n# You can run the model using the command prompt and the iMOD-WQ executable"
  },
  {
    "objectID": "tutorial_wq.html#running-the-model",
    "href": "tutorial_wq.html#running-the-model",
    "title": "Conceptual fresh-salt model",
    "section": "Running the model",
    "text": "Running the model\nThis model requires the iMOD-WQ kernel, which is part of iMOD 5 and which you can download for free here after registering. It usually takes only a few minutes before a link is sent.\nOpen a terminal (cmd.exe is fine, but the cool kids use Powershell and call the following lines of code:\n./path/to/iMOD-WQ.exe ./FreshwaterLens.run\nThis will run the iMOD-WQ model, and should not take more than 10 seconds.\n\n\n\nIf everything worked well, iMOD WQ prints “Normal termination of iMOD-WQ”"
  },
  {
    "objectID": "tutorial_wq.html#convert-output-data",
    "href": "tutorial_wq.html#convert-output-data",
    "title": "Conceptual fresh-salt model",
    "section": "Convert output data",
    "text": "Convert output data\niMOD-WQ writes IDF files, a data format used in iMOD 5, which not many other software packages support. Therefore iMOD-python allows for reading these IDF files and converting them to other data formats in Python.\nIn this example we convert the output to a UGRID file, which can be read by QGIS.\nimport imod\nimport numpy as np\nimport xarray as xr\n\n# We assume that this script is located in the same directory\n# as in create_wq_input.py.\n# We provide a UNIX style global path\n# to select all IDF files in the conc directory.\nconc_path = \"./results/conc/*.IDF\"\nbottom_path = \"./FreshwaterLens/bas/bottom*.idf\"\ntop_path = \"./FreshwaterLens/bas/top.idf\"\n\n# Open the IDF files.\nconc = imod.idf.open(conc_path).compute()\nbottom = imod.idf.open(bottom_path).compute()\nsurface = imod.idf.open(top_path).compute()\n\n# Reconstruct vertical discretization\n# We need this as IDFs do not store vertical discretization\nsurface = surface.assign_coords(layer=1)\n\n## Create 3D array of tops\n### Roll bottom one layer downward: the bottom of a layer is top of next layer\ntop = bottom.roll(layer=1, roll_coords=False)\n### Remove layer 1\ntop = top.sel(layer=slice(2, None))\n### Add surface as layer 1\ntop = xr.concat([surface, top], dim=\"layer\")\n### Reorder dimensions\ntop = top.transpose(\"layer\", \"y\", \"x\")\n\n# Merge into dataset\nds = xr.merge([conc, top, bottom])\n\n# Create MDAL supported UGRID\n# NOTE: This requires iMOD-python v1.0(?)\nds_ugrid = imod.util.to_ugrid2d(ds)\n\n#%% Due to a bug in MDAL, we have to encode the times as floats\n# instead of integers\n# until this is fixed: https://github.com/lutraconsulting/MDAL/issues/348\nds_ugrid[\"time\"].encoding[\"dtype\"] = np.float64\n\nds_ugrid.to_netcdf(\"./results/output_ugrid.nc\")"
  },
  {
    "objectID": "tutorial_wq.html#viewing-the-results-in-qgis",
    "href": "tutorial_wq.html#viewing-the-results-in-qgis",
    "title": "Conceptual fresh-salt model",
    "section": "Viewing the results in QGIS",
    "text": "Viewing the results in QGIS\nStart QGIS and open the ./results/output_ugrid.nc file as a mesh.\n\n\n\nWhere to find the action to load a mesh layer\n\n\nYou can select the variable to plot on the map canvas by right-clicking the output_ugrid layer in the Layers panel, and then navigating to: Properties > Symbology\nNext select which variable to plot in the group selection screen by clicking the color ramp next to the variable name, which will render the variable on the map canvas.\n\n\n\nWhere to find the group selection screen. Here you can select the variables to be plotted. The red circle indicates where the color ramp symbol can be found.\n\n\nColormaps can be set by navigating to the color selection menu\n\n\n\nThe color selection menu, here you can set the colormap that will be used, as well as adjusting its binning. In these example screenshots we use the colormap \"Spectral\".\n\n\nNext, open the iMOD plugin's cross-section tool  and draw a cross-section by clicking from Map and right-clicking to stop drawing. Then select conc as variable to be plotted, and click Add. Next click Plot.\nBy default the tool will plot with a green to blue gradient called Viridis, but we can change the gradient by clicking the dataset's gradient box under symbology in the table.\nThis opens up a color dialog, where we can select the color ramp. Clicking the small arrow next to the color gradient box in the dialog will allow selecting presets. We chose \"Spectral\" and also select \"Invert Color Ramp\" in the examples, but you can select whatever colormap you think is suitable!\n\n\n\nYou should see this if you followed precisely what we did."
  },
  {
    "objectID": "tutorial_wq.html#viewing-the-results-in-the-imod-3d-viewer",
    "href": "tutorial_wq.html#viewing-the-results-in-the-imod-3d-viewer",
    "title": "Conceptual fresh-salt model",
    "section": "Viewing the results in the iMOD 3D Viewer",
    "text": "Viewing the results in the iMOD 3D Viewer\nAs a final step we will look at the results in the iMOD 3D Viewer. Click the 3D viewer symbol  in QGIS, which will open up the 3D viewer widget of the iMOD plugin.\nFirst, click the Draw Extent button to draw an extent to be plotted. This can be very useful for large datasets, to only look at a smaller zone of the data.\nSecond, click Start iMOD 3D viewer to start the iMOD 3D viewer. Third, click Load mesh data to load the mesh you selected in the QGIS widget to be opened in the 3D viewer.\nFourth, to plot the data, under the Imported files, expand the data selection tree, and under Layered datasets, selecting conc.\nFinally, you can migrate the colormap you used in QGIS by clicking Load legend.\n\n\n\nIf you followed the instructions, you should see this."
  },
  {
    "objectID": "tutorial_wq.html#concluding",
    "href": "tutorial_wq.html#concluding",
    "title": "Conceptual fresh-salt model",
    "section": "Concluding",
    "text": "Concluding\nIn short, we wrote model input with iMOD-python, ran a model with iMOD-WQ, converted its output to UGRID with iMOD-python, and viewed the results in QGIS and the iMOD 3D viewer."
  }
]